/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SickLeave as PrismaSickLeave,
  Employee as PrismaEmployee,
} from "@prisma/client";

export class SickLeaveServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SickLeaveCountArgs, "select">
  ): Promise<number> {
    return this.prisma.sickLeave.count(args);
  }

  async sickLeaves<T extends Prisma.SickLeaveFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SickLeaveFindManyArgs>
  ): Promise<PrismaSickLeave[]> {
    return this.prisma.sickLeave.findMany<Prisma.SickLeaveFindManyArgs>(args);
  }
  async sickLeave<T extends Prisma.SickLeaveFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SickLeaveFindUniqueArgs>
  ): Promise<PrismaSickLeave | null> {
    return this.prisma.sickLeave.findUnique(args);
  }
  async createSickLeave<T extends Prisma.SickLeaveCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SickLeaveCreateArgs>
  ): Promise<PrismaSickLeave> {
    return this.prisma.sickLeave.create<T>(args);
  }
  async updateSickLeave<T extends Prisma.SickLeaveUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SickLeaveUpdateArgs>
  ): Promise<PrismaSickLeave> {
    return this.prisma.sickLeave.update<T>(args);
  }
  async deleteSickLeave<T extends Prisma.SickLeaveDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SickLeaveDeleteArgs>
  ): Promise<PrismaSickLeave> {
    return this.prisma.sickLeave.delete(args);
  }

  async getEmployee(parentId: string): Promise<PrismaEmployee | null> {
    return this.prisma.sickLeave
      .findUnique({
        where: { id: parentId },
      })
      .employee();
  }
}
