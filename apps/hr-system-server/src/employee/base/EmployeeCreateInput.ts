/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsOptional, ValidateNested, IsString } from "class-validator";
import { Type } from "class-transformer";
import { DayOffCreateNestedManyWithoutEmployeesInput } from "./DayOffCreateNestedManyWithoutEmployeesInput";
import { MeetingCreateNestedManyWithoutEmployeesInput } from "./MeetingCreateNestedManyWithoutEmployeesInput";
import { SickLeaveCreateNestedManyWithoutEmployeesInput } from "./SickLeaveCreateNestedManyWithoutEmployeesInput";

@InputType()
class EmployeeCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateJoined?: Date | null;

  @ApiProperty({
    required: false,
    type: () => DayOffCreateNestedManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => DayOffCreateNestedManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => DayOffCreateNestedManyWithoutEmployeesInput, {
    nullable: true,
  })
  dayOffs?: DayOffCreateNestedManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => MeetingCreateNestedManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => MeetingCreateNestedManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => MeetingCreateNestedManyWithoutEmployeesInput, {
    nullable: true,
  })
  meetings?: MeetingCreateNestedManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => SickLeaveCreateNestedManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => SickLeaveCreateNestedManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => SickLeaveCreateNestedManyWithoutEmployeesInput, {
    nullable: true,
  })
  sickLeaves?: SickLeaveCreateNestedManyWithoutEmployeesInput;
}

export { EmployeeCreateInput as EmployeeCreateInput };
