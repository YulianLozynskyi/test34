/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DayOffListRelationFilter } from "../../dayOff/base/DayOffListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { MeetingListRelationFilter } from "../../meeting/base/MeetingListRelationFilter";
import { SickLeaveListRelationFilter } from "../../sickLeave/base/SickLeaveListRelationFilter";

@InputType()
class EmployeeWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateJoined?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DayOffListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DayOffListRelationFilter)
  @IsOptional()
  @Field(() => DayOffListRelationFilter, {
    nullable: true,
  })
  dayOffs?: DayOffListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => MeetingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MeetingListRelationFilter)
  @IsOptional()
  @Field(() => MeetingListRelationFilter, {
    nullable: true,
  })
  meetings?: MeetingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SickLeaveListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SickLeaveListRelationFilter)
  @IsOptional()
  @Field(() => SickLeaveListRelationFilter, {
    nullable: true,
  })
  sickLeaves?: SickLeaveListRelationFilter;
}

export { EmployeeWhereInput as EmployeeWhereInput };
